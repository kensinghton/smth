ENV["LC_ALL"] = "en_US.UTF-8"
BOX_IMAGE = "ubuntu/bionic64"
NODE_COUNT = "2".to_i
NETWORK_BASE = "192.168.101"
NETWORK_NETMASK = "255.255.255.0"
INTEGRATION_START_SEGMENT = "1"
RAM_MEM = 1024

Vagrant.configure("2") do |config|
	(1..NODE_COUNT).each do |i|
	  config.vm.define "node#{i}" do |rev|
            rev.vm.box = BOX_IMAGE 
	    rev.vm.hostname = "node#{i}.box"
	    rev.vm.network "private_network", ip: "#{NETWORK_BASE}.#{INTEGRATION_START_SEGMENT}#{i}", netmask: NETWORK_NETMASK
		if rev.vm.hostname == "node2.box" then
		rev.vm.provision "file", source: "./ansible/.", destination: "/home/vagrant/"
		rev.vm.provision "shell", inline: $script_rev2
		else
		rev.vm.provision "shell", inline: $script_rev1
		end
	    rev.vm.provision "shell", inline: "echo node#{i} is up and running && hostname -I"
	    rev.vm.provider "virtualbox" do |v|
		v.memory = "#{RAM_MEM}"
	    end
	end
end
$script_rev1 = <<-EOF1
export LC_ALL=en_US.UTF-8
sudo sed -i.bak "/PasswordAuthentication/c\PasswordAuthentication yes" /etc/ssh/sshd_config && echo SSH pass authentication is allowed
sudo service ssh restart
EOF1
$script_rev2 = <<-EOF2
export LC_ALL=en_US.UTF-8
if (exec 3<>/dev/tcp/192.168.101.11/22) 2> /dev/null; then
    echo SSH is up on node1
else
    echo SSH is down on node 1
fi
if [ -z "$(find /var/cache/apt/pkgcache.bin -mmin -60)" ]; then
  apt-get update
fi

dpkg --get-selections | grep ansible || sudo apt install git maven tomcat8 -y
#sudo tee -a /etc/tomcat8/tomcat-users.xml > /dev/null <<EOT
#<?xml version="1.0" encoding="UTF-8"?>
#<tomcat-users xmlns="http://tomcat.apache.org/xml"
#              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
#              xsi:schemaLocation="http://tomcat.apache.org/xml tomcat-users.xsd"
#              version="1.0">
#<role rolename="manager-gui"/>
#<user username="tom" password="q3e" roles="manager-gui"/>
#</tomcat-users>
#EOT
git clone https://github.com/shashirajraja/onlinebookstore
cd onlinebookstore/
mvn clean install
sudo cp target/onlinebookstore-0.0.1-SNAPSHOT.war /var/lib/tomcat8/webapps/
#sudo systemctl restart tomcat8.service

EOF2
end
